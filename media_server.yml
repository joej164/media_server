---
- hosts: servers
  become: true

  tasks:
    - name: Update and install desired packages
      apt:
        pkg:
          - vim
          - git
        state: latest
        update_cache: yes
    
    - name: update apt
      apt:
        update_cache: yes

    - name: install docker prereqs
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
        state: latest
        update_cache: yes
    
    - name: Add GPG Key 
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/trusted.gpg.d/docker.asc
    
    - name: Add Docker Repo
      apt_repository: 
        repo: "deb [signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/ubuntu jammy stable"
        state: present
    
    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: verify docker is running
      systemd:
        state: started
        name: docker
    
    - name: put user in docker group
      user:
        name: joe
        groups: docker
        append: yes
    
    - name: Install python docker package
      pip:
        name: docker

    - name: create directory for docker compose
      file:
        path: /home/joe/.docker/cli-plugins/
        state: directory
        mode: '0755'
      
    - name: Install Docker compose 
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.14.2/docker-compose-linux-x86_64 
        dest: /home/joe/.docker/cli-plugins/docker-compose
        mode: "u=rwx,g=rx,o=rx"

    - name: Pull down desired images 
      community.docker.docker_image:
        name: "jellyfin/jellyfin"
        source: pull
    
    - name: Create a folder to mount the external hard drive
      file:
        path: /media/easystore
        state: directory
        mode: '0755'
    
    - name: mount the external hard drive
      ansible.posix.mount:
        path: /media/easystore
        src: /dev/sdb1
        fstype: ntfs
        state: mounted 

    - name: Create a movie folder on the drive
      file:
        path: /media/easystore/media/Movies
        state: directory
        mode: '0755'

    - name: Create a shows folder on the drive
      file:
        path: /media/easystore/media/Shows
        state: directory
        mode: '0755'

    - name: Create a cache folder on the drive
      file:
        path: /media/easystore/cache
        state: directory
        mode: '0755'

    - name: Create a config folder on the drive
      file:
        path: /media/easystore/config
        state: directory
        mode: '0755'

    - name: install samba
      apt:
        pkg:
          - samba
        state: latest
        update_cache: true

    - name: Update the samba.conf file
      blockinfile:
        path: /etc/samba/smb.conf 
        block: |
          [jellyfin]
            comment = Samba on Ubuntu
            path = /media/easystore
            read only = no
            browsable = yes

    - name: Restart the samba service
      service:
        name: smbd
        state: restarted 
    
    - name: Update the ufw firewall
      community.general.ufw:
        rule: allow
        name: samba

    - name: Add default user to the samba permissions
      shell:  "(echo {{ smbpass }}; echo {{ smbpass }}) | smbpasswd -s joe" 
      become: yes

    - name: Copy Jellyfin Docker Compose file to server
      copy:
        src: ./jellyfin/docker-compose.yml
        dest: /home/joe/jellyfin/
        mode: '0755'

    - name: Copy Jellyfin SystemD file to the server 
      copy:
        src: ./jellyfin/jellyfin.service
        dest: /etc/systemd/system/
        mode: '0644'

    - name: Enable Jellyfin Service
      systemd:
        name: jellyfin
        state: started 
        enabled: true

    - name: Copy PiHole Docker Compose file to server
      copy:
        src: ./pihole/docker-compose.yml
        dest: /home/joe/pihole/
        mode: '0755'
    
    - name: Modify resolved.conf to disable DNS listener
      lineinfile:
        dest:  /etc/systemd/resolved.conf
        regexp: #DNSStubListener=yes
        line: DNSStubListener=no
    
    - name: Restart the SystemD Resolved service
      service:
        name: systemd-resolved
        state: restarted

    - name: Copy PiHole SystemD file to the server 
      copy:
        src: ./pihole/pihole.service
        dest: /etc/systemd/system/
        mode: '0644'

    - name: Enable Pihole Service
      systemd:
        name: pihole 
        state: started 
        enabled: true

    - name: Wait for Pihole to start
      pause:
        seconds: 15

    - name: Get Logs for Pihole
      command: docker logs pihole
      register: output

    - name: Parse the logs looking for the password that was set for Pihole 
      set_fact:
        pw: "{{ output.stdout | regex_search('Assigning random password: \\S+') }}"
    
    - name: Output the Password 
      debug:
        var: pw
    
    - name: Install Tailscale
      include_role:
        name: artis3n.tailscale
      vars:
        tailscale_up_skip: true